syntax = "proto3";

//tokencheck:  用于 管理帐号的密码 和 需要验证某操作权限的token
package cfwf.micro_service.tokencheck;
option java_package = "com.cfwf.micro_service.tokencheck";
 
service TokenCheck {
  //验证用户密码
  rpc CheckUserPassword (CheckUserPasswordRequest) returns (CommonResponse) {}

  //客户端登录：验证密码、保存aes key, 生成 token并返回. 如果成功 CommonResponse.msg 保存token)
  rpc CheckUserPasswordWhenClientLogin (CheckUserPasswordWhenClientLoginRequest) returns (CommonResponse) {}
  
  //客户端接入：检查 token 并返回aes key。 token 和 aes key 为CheckUserPasswordWhenClientLogin存入
  rpc CheckUserTokenWhenClientAccess (CheckUserTokenWhenClientAccessRequest) returns (CheckUserTokenWhenClientAccessResponse) {}
  
  //修改密码
  rpc ModifyUserPassword (ModifyUserPasswordRequest) returns (CommonResponse) {}  

  //创建 token
  rpc CreateToken (CreateTokenRequest) returns (CommonResponse) {}

  //检查token
  rpc CheckToken (CheckTokenRequest) returns (CommonResponse) {}  
} 

//通用rpc调用返回结果
enum RPC_CALL_RESULT {
   RPC_CALL_RESULT_NONE        = 0;   //不应出现
   RPC_CALL_RESULT_SUCCESS     = 1;   //成功
   RPC_CALL_RESULT_DB_ERROR    = 2;   //数据库出错
   RPC_CALL_RESULT_INPUT_ERROR = 3;   //传入数据有错，格式错误或者找不到对应条目
   RPC_CALL_RESULT_ERROR       = 4;   //其他错误
}

//一般rpc调用返回值
message CommonResponse{
	RPC_CALL_RESULT result = 1; 
	string msg = 2; //如果出错，存放出错信息； CheckToken调用在成功时返回创建的token
}

//函数： CheckUserPassword 的 传入参数
message CheckUserPasswordRequest{
    fixed64 userid = 1;
	string password = 2;
}

//函数： CheckUserPasswordWhenClientLogin 的 传入参数
message CheckUserPasswordWhenClientLoginRequest{
    fixed64 userid = 1;
	string password = 2;
    string aes_key = 3;
    string aes_iv = 4;
    string machine_info = 5;
    int32 os = 6; // 1=pc 2=android 3=ios
}

message CheckUserTokenWhenClientAccessRequest{
    fixed64 userid = 1;
	string token = 2;
    int32 os = 3; // 1=pc 2=android 3=ios
}

message CheckUserTokenWhenClientAccessResponse{
    RPC_CALL_RESULT result = 1;
	string aes_key = 2;
    string aes_iv = 3;
}
  
  
//函数： ModifyUserPassword 的 传入参数
message ModifyUserPasswordRequest{
    fixed64 userid = 1;
	string password = 2;
}

//函数： CreateToken 的 传入参数
message CreateTokenRequest{
    fixed64 userid = 1;
	int32 forwhat = 2; 
	int32 available_times = 3; //0=不限次数
	string timeout = 4;
    int32 os = 5; // 1=pc 2=android 3=ios
}

//函数： CheckToken 的 传入参数
message CheckTokenRequest{
    uint64 userid = 1;
	int32 forwhat = 2;
	string token = 3;
    int32 os = 4; //0=不验证os	
} 











