syntax = "proto3";

//school_weike:  班级微课

package cfwf.micro_service.school_weike;
option java_package = "com.cfwf.micro_service.school_weike";


service SchoolWeike { 
  //获取微课列表
  rpc GetWeikeList (GetWeikeListRequest) returns (GetWeikeListResponse) {}  
  
  //获取班级微课列表
  rpc GetClassWeikeList (GetClassWeikeListRequest) returns (GetClassWeikeListResponse) {}
  
  //获取某个班级的一个班级微课详细观看记录
  rpc GetClassWeikeViewList (GetClassWeikeViewListRequest) returns (GetClassWeikeViewListResponse) {}
  
  //获取某个微课在各个班的观看总人数
  rpc GetClassWeikeViewCount (GetClassWeikeViewCountRequest) returns (GetClassWeikeViewCountResponse) {}
  
  //删除微课
  rpc DeleteWeike (DeleteWeikeRequest) returns (DeleteWeikeResponse) {}
  
  //获取微课审核列表
  rpc GetApplyList (GetApplyListRequest) returns (GetApplyListResponse) {}
  
  //处理微课审核
  rpc DealWeikeApply (DealWeikeApplyRequest) returns (DealWeikeApplyResponse) {}
  
  //获取微课信息
  rpc GetWeikeInfo(GetWeikeInfoRequest) returns (GetWeikeInfoResponse) {}  
  
  //自己班学生观看微课 本班学生观看会进行积分统计，ViewWeike接口则不进行积分统计
  rpc ViewWeikeByClassStudent(ViewWeikeByClassStudentRequest) returns (ViewWeikeByClassStudentResponse) {}
  
  //发布微课
  rpc InsertWeike(InsertWeikeRequest) returns (InsertWeikeResponse) {}
  
  //获取某个微课在哪些班级发布了
  rpc GetClassid (GetClassidRequest) returns (GetClassidResponse) {}
  
  //非本班学生观看微课
  rpc ViewWeike (ViewWeikeRequest) returns (CommonResponse) {}

  // 批量获取班级微课数量
  rpc GetSchoolWeikeCount(GetSchoolWeikeCountRequest) returns (GetSchoolWeikeCountResponse) {}
} 

//通用rpc调用返回结果
enum RPC_CALL_RESULT {
   RPC_CALL_RESULT_NONE        = 0;   //不应出现
   RPC_CALL_RESULT_SUCCESS     = 1;   //成功
   RPC_CALL_RESULT_DB_ERROR    = 2;   //数据库出错
   RPC_CALL_RESULT_INPUT_ERROR = 3;   //传入数据有错，格式错误或者找不到对应条目
   RPC_CALL_RESULT_ERROR       = 4;   //其他错误
}

//一般rpc调用返回值
message CommonResponse{
	RPC_CALL_RESULT result = 1;
	string msg = 2;
} 

message Grade_and_Subject{
	int32 grade = 1;            //学科
	string subject = 2;         //科目（如果有多个，就用‘,’作为分隔符）
}

message GetWeikeListRequest{
	int32 page = 1;              //第几页
	int32 pagesize = 2;          //一页显示多少条
	int64 userid = 3;            //发布者ID
	int32 schoolid = 4;          //学校ID
	int32 view_type = 5;         //视频公开方式 0=所有（公开+本校） 1=本校 2=公开
	int32 cityid = 6;            //市/区县ID
	string start_time = 7;       //开始时间 '2017-08-08 12:03:00'
	string end_time = 8;         //结束时间 '2017-08-08 12:03:00'
	repeated Grade_and_Subject grade_subject = 9; //年级学科分类
	string keyword = 10;         //搜索关键字
	int32 order = 11;           //排序方式 1-最新发布 2-点击最多
	int32 chapterid = 12;        //章节ID 
	string cityid_list = 13;     //可以传入多个id，id之间用‘,’分隔
} 

message WeikeItem{
	string title = 1;         //微课标题
	int64 weike_id = 2;       //微课ID
	int64 userid = 3;         //发布者ID	 
	int32 view_count = 4;     //微课观看次数
	string cover_resid = 5;   //封面资源id	
	string public_time = 6;   //发布时间
	int32 view_type = 7;      //视频公开方式 0=所有 1=本校 2=公开
	string file_resid = 8;    //视频资源id
	int64 schoolid = 9;       //学校ID
	string description = 10;  //课程描述
	int32 duiation = 11;      //视频时长
	int32 grade = 12;         //年级
	int32 subject = 13;       //学科
	int32 dianzhan = 14;      //点赞量	
	string effect_time = 15;  //生效时间
}

message GetWeikeListResponse{
	RPC_CALL_RESULT result = 1;
	int32 pagesize = 2;          //每页条数
    int32 page = 3;              //当前页
    int32 pagecount = 4;         //总页数
    int32 recordcount = 5;       //总条数
	repeated WeikeItem list = 6; //当前页结果列表
} 

enum DELETE_WEIKE_USER_TYPE{
	DELETE_WEIKE_USER_TYPE_SELF = 0;  //用户自己删除
	DELETE_WEIKE_USER_TYPE_SCHOOL_ADMIN = 1; //学校管理员删除 
	DELETE_WEIKE_USER_TYPE_SYSTEM_ADMIN = 4; //系统管理员删除
}

message DeleteWeikeRequest{
	repeated string weike_id = 1;	//微课ID
	DELETE_WEIKE_USER_TYPE usertype = 2; //用户类型
}

message DeleteWeikeResponse{
	RPC_CALL_RESULT result = 1;
	bool delete_result = 2;               //1:删除成功 2：删除失败
	string msg = 3;                       //失败信息	
}

message GetApplyListRequest{
	int32 schoolid = 1;       //学校ID
	repeated Grade_and_Subject grade_subject = 2; //年级学科分类
	string keyword = 3;       //搜索关键字
	int32 page = 4;      //第几页
	int32 pagesize = 5;  //一页显示多少条
} 

message GetApplyListResponse{
	RPC_CALL_RESULT result = 1;
	int32 pagesize = 2;               //每页条数
    int32 page = 3;                   //当前页
    int32 pagecount = 4;              //总页数
    int32 recordcount = 5;            //总条数
	repeated WeikeItem list = 6;      //当前页结果列表
}

enum DEAL_WEIKE_USER_TYPE{	   
	DEAL_WEIKE_USER_TYPE_SCHOOL_ADMIN =0; //学校管理员审核	
}

message DealWeikeApplyRequest{
	repeated string weike_id = 1;          //微课ID
	int32 operation = 2;                   //1-通过 2-拒绝
	DEAL_WEIKE_USER_TYPE usertype = 3;     //用户类型
}

message DealWeikeApplyResponse{
	RPC_CALL_RESULT result = 1;
	int32 deal_result = 2;                //1:操作成功 2：操作失败
	string msg = 3;                       //失败信息	
}

message GetWeikeInfoRequest{
	int32 weike_id = 1;	
}

message GetWeikeInfoResponse{
	RPC_CALL_RESULT result = 1;
	WeikeItem item = 2;
}

//微课观看设备类型枚举
enum DEVICE_TYPE{
    DEVICE_TYPE_NONE = 0;     
	DEVICE_TYPE_PC = 1;       //使用pc端观看
	DEVICE_TYPE_ANDROID = 2;  //使用android手机观看
    DEVICE_TYPE_IOS = 3;	  //使用ios手机观看
    DEVICE_TYPE_WEB = 4;	  //使用网页观看
}

message ViewWeikeByClassStudentRequest{
	int32 weike_id = 1;      //微课ID
	int64 userid = 2;        //观看者ID
	DEVICE_TYPE device = 3;  //使用何种设备观看
	int32 classid = 4;       //班级ID
    string client_ip = 5;     //观看者ip
}

message ViewWeikeByClassStudentResponse{
	RPC_CALL_RESULT result = 1;
}

message GetClassWeikeListRequest{
	int32 page = 1;                                //第几页
	int32 pagesize = 2;                            //一页显示多少条
	repeated int64 classid_list = 3;               //班级id   该字段需要传值
	int64 userid = 4;                              //发布者id 该字段如果不传值，则查询班级里所有老师发布的班级微课
	string keyword = 5;                            //关键字 
	repeated Grade_and_Subject grade_subject = 6;  //年级、学科
}

message GetClassWeikeListResponse {
	RPC_CALL_RESULT result = 1;
	int32 pagesize = 2;          //每页条数
    int32 page = 3;              //当前页
    int32 pagecount = 4;         //总页数
    int32 recordcount = 5;       //总条数
	repeated WeikeItem list = 6; //当前页结果列表
}

message GetClassWeikeViewListRequest {
    int64 id = 1;               //微课id
	int64 classid = 2;          //班级id
	int32 page = 3;             //第几页
	int32 pagesize = 4;         //一页显示多少条
}

message ClassWeikeViewItem {
	int64 userid = 1;             //观看者id
	int32 view_count_pc = 2;      //总观看次数,使用pc
	int32 view_count_mobile = 3;  //总观看次数,使用手机
	string view_time = 4;         //最后一次观看时间
}

message GetClassWeikeViewListResponse {
	RPC_CALL_RESULT result = 1;
	int64 id = 2;                          //微课id
	int64 classid = 3;                     //班级id
	int32 pagesize = 4;          //每页条数
    int32 page = 5;              //当前页
    int32 pagecount = 6;         //总页数
    int32 recordcount = 7;       //总条数
	repeated ClassWeikeViewItem list = 8;  //观看列表
}

message GetClassWeikeViewCountRequest {
    int64 id = 1;                        //微课id
	repeated int64 classid = 2;          //班级id	
}

message ClassWeikeViewCountItem {
	int64 classid = 1;
	int32 count = 2;
}

message GetClassWeikeViewCountResponse {
	RPC_CALL_RESULT result = 1;
	repeated ClassWeikeViewCountItem list = 2;
}

//发布微课
message InsertWeikeRequest {
	int64 userid = 1;                      //发布者ID
	int32 cityid = 2;                      //城市id
	int64 schoolid = 3;                    //学校id
	repeated int64 classid = 4;                     //班级id，如果是发班级微课，该字段需要传值
	bool is_public = 5;                    //是否公开 true=公开 false=不公开
	string title = 6;                      //标题
	string description = 7;                //描述，简介
	int32 length = 8;                      //视频时长
	string cover_resid = 9;                //封面资源id
	string resid = 10;                     //视频资源id
	int32 filesize = 11;                   //文件大小
	int32 grade = 12;                      //年级
	int32 subject = 13;                    //学科
	int32 chapterid = 14;                  //章节ID
	string knowledge_point = 15;           //知识点id列表，可多个，使用逗号分隔
	bool is_need_approve = 16;             //是否需要审核 true=要审核 false=不用审核
	string effect_time = 17;               //生效时间，如果是定时发布的，该字段需要传值
	string practice_questions = 18;        //测试题, 题目编号 id1,id2,id3,id4,id5
	int32 tiku = 19;                       //所用题库
}

message InsertWeikeResponse {
	RPC_CALL_RESULT result = 1;	
	string msg = 2;       //返回信息   
	int64 courseid = 3;   //课程ID
}

//获取某个微课在哪些班级发布了
message GetClassidRequest {
	int64 weike_id = 1;   //班级id
}

message GetClassidResponse {
	RPC_CALL_RESULT result = 1;	
	string msg = 2;                    //返回信息   
	repeated int64 classid_list = 3;   //班级ID
}

//非本班学生观看微课
message ViewWeikeRequest {
	int32 weike_id = 1;      //微课ID
	int64 userid = 2;        //观看者ID
	DEVICE_TYPE device = 3;  //使用何种设备观看
    string client_ip = 4;     //观看者ip
}

message GetSchoolWeikeCountRequest{
	int64 userid = 1;
    repeated fixed64 classids = 2;
}

message WeikeCountMap{
	int64 classid = 1;
	int32 weike_count = 2;
}

message GetSchoolWeikeCountResponse{
	RPC_CALL_RESULT result = 1;
	repeated WeikeCountMap weike_count = 2;
}












