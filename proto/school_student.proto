syntax = "proto3";

//school_student:  用于 管理中小学学生所在学校班级以及入班申请
package cfwf.micro_service.school_student;
option java_package = "com.cfwf.micro_service.school_student";

service SchoolStudent { 
  //获取学生申请列表(分页返回)
  rpc SearchStudentApply (SearchStudentApplyRequest) returns (SearchStudentApplyResponse) {}  

  //批准或拒绝 学生申请
  rpc ApproveStudentApply (ApproveStudentApplyRequest) returns (CommonResponse) {}  
  
  //批量批准或拒绝 学生申请
  rpc BatchApproveStudentApply (BatchApproveStudentApplyRequest) returns (CommonResponse) {}  
  
  
  //学生提交入校/入班 申请：如果之前学生已经提交过申请，则新申请信息会覆盖原申请信息
  rpc StudentSubmitApply (StudentApplyInfo) returns (CommonResponse) {} 
  
  //获取学生列表(分页返回)
  rpc SearchStudent (SearchStudentRequest) returns (SearchStudentResponse) {} 
  
  //获取班级内学生列表
  rpc GetClassStudents (GetClassStudentsRequest) returns (GetClassStudentsResponse) {} 
  
  //获取某学生信息
  rpc GetStudentInfo (GetStudentInfoRequest) returns (GetStudentInfoResponse) {} 

  //获取某学生信息和申请信息
  rpc GetStudentStatusInfo (GetStudentStatusInfoRequest) returns (GetStudentStatusInfoResponse) {} 
  
  //设置学生信息。不通过审批，直接设置学生所属班级，用户批量注册
  rpc SetStudentInfo (SetStudentInfoRequest) returns (CommonResponse) {} 
  
  //从学校内移除学生。
  rpc RemoveStudent (RemoveStudentRequest) returns (CommonResponse) {} 
  
  //获取班级内学生人数
  rpc GetStudentCount(GetStudentCountRequest) returns (GetStudentCountResponse) {} 
}

//通用rpc调用返回结果
enum RPC_CALL_RESULT {
   RPC_CALL_RESULT_NONE        = 0;   //不应出现
   RPC_CALL_RESULT_SUCCESS     = 1;   //成功
   RPC_CALL_RESULT_DB_ERROR    = 2;   //数据库出错：数据库连接失败、操作失败等
   RPC_CALL_RESULT_INPUT_ERROR = 3;   //传入数据格式错误或不合法
   RPC_CALL_RESULT_ITEM_NOT_EXIST  = 4;   //对应条目不存在，"获取"["删除"/"修改"]单条数据时，若找不到对应数据，则返回该值
   RPC_CALL_RESULT_ITEM_HAS_EXIST  = 5;   //对应条目已存在，"创建"单条数据或批量数据时，若发现已存在相同数据则返回该值； "修改"时，发现除了要修改的对象外，还有其他数据和修改后的数据出现重复时，则不做修改并返回该值
}

//一般rpc调用返回值
message CommonResponse{
	RPC_CALL_RESULT result = 1;
	string msg = 2;
} 

enum USER_SEX{
	USER_SEX_INIT = 0;
    USER_SEX_GIRL = 1;
    USER_SEX_BOY  = 2;   
}

message StudentApplyInfo{
    fixed64 userid = 1;         
	fixed64 schoolid = 2;        //学校id
    fixed64 classid = 3;         //如果指定了classid，则忽略 grade_year 、grade、class_no
    
    int32 period = 4;            //学段： 1=小 2=初 3=高
    int32 grade_year = 5;        //学届。如果指定了 period 和 grade_year，则忽略 grade
    int32 grade = 6;             //年级
    int32 class_no = 7;          //班级序号
    
	string username = 8;         //姓名
	USER_SEX sex = 9;            //性别
	string submit_time = 10;     //申请时间，格式： yyyy-mm-dd hh:nn:ss

    enum APPROVE_STATUS {
        APPROVE_STATUS_WAIT = 0;     //等待审批
        APPROVE_STATUS_PASSED = 1;   //人工审批通过
        APPROVE_STATUS_REFUSED = 2;  //拒绝
        APPROVE_STATUS_AUTO_PASSED = 3;  //自动审批通过
        APPROVE_STATUS_TIMEOUT = 4;  //已过期(用户在上个申请未审批前又提交了一次申请，则上个申请将被设为过期)
    }
    APPROVE_STATUS status = 11;
}

//函数： SearchStudentApply 
message SearchStudentApplyRequest{    
    int32 pagesize = 1;        //每页条数
    int32 page = 2;            //当前页。如果>总页数，则返回最后一页的数据
    
    fixed64 schoolid = 3;      //学校id
    string classid = 4;        //班级: 可多个年级: 1,2,3 ...
    
    int32 period = 5;          //0=不限制
    string grade_year = 6;     //学届: 可多个: 2012,2013,2014 ...
    
    string grade = 7;          //年级: 可多个: 1,2,3 ...
    string class_no = 8;       //班级序号，可多个: 1,2,3 ...
    string keyword = 9;        //姓名/帐号 关键字   
}

message SearchStudentApplyResponse{
    RPC_CALL_RESULT result = 1;
	
	int32 pagesize = 2;        //每页条数
    int32 page = 3;            //当前页
    int32 pagecount = 4;       //总页数
    int32 recordcount = 5;     //总条数
    
    repeated StudentApplyInfo list = 6; //当前页结果列表
}


//教师申请条目：用于 ApproveStudentApply 和 RejectStudentApply
message SchoolStudentApproveItem{
    fixed64 schoolid = 1;     //学校id
    fixed64 studentid = 2;    //学生id
    fixed64 classid = 3;      //班级id
    
    bool approved = 4;        //true=批准 false=拒绝
}


//处理学生申请条目
message ApproveStudentApplyRequest{
    fixed64 operatorid = 1;
    SchoolStudentApproveItem info = 2; //申请条目列表
}

//批量处理学生申请条目：用于 BatchApproveStudentApply 和 BatchRejectStudentApply
message BatchApproveStudentApplyRequest{
    fixed64 operatorid = 1;
    repeated SchoolStudentApproveItem list = 2; //申请条目列表
}

//StudentInfo：学生信息。
message StudentInfo{
    fixed64 userid = 1;         
	fixed64 schoolid = 2;         //学校id
    fixed64 classid = 3;          //班级id
    
    int32 period  = 4;                //0=不限制
    int32 grade_year = 5;     //学届
    int32 grade = 6;          //年级
    int32 class_no = 7;       //班级序号

    enum STUDENT_STATUS{
        STUDENT_STATUS_NONE = 0;
        STUDENT_STATUS_IN_CLASS = 1;
        STUDENT_STATUS_LEAVE_CLASS = 2;
        STUDENT_STATUS_LEAVE_SCHOOL = 3;
    }
    STUDENT_STATUS status = 8;
}

//获取学生列表(分页返回)
message SearchStudentRequest{
    int32 pagesize = 1;        //每页条数
    int32 page = 2;            //当前页。如果>总页数，则返回最后一页的数据
    
    fixed64 schoolid = 3;      //学校id，必填
    string classid = 4;        //班级id,可多个， 空=不限
    int32 period  = 5;         //0=不限制
    string grade_year = 6;     //学届: 可多个: 2012,2013,2014 ...
    string grade = 7;          //年级: 可多个: 1,2,3 ...
    string class_no = 8;       //班级序号，可多个: 1,2,3 ...
    string keyword = 9;        //姓名 关键字   
}

message SearchStudentResponse{
    RPC_CALL_RESULT result = 1;
	
	int32 pagesize = 2;        //每页条数
    int32 page = 3;            //当前页
    int32 pagecount = 4;       //总页数
    int32 recordcount = 5;     //总条数
    
    repeated StudentInfo list = 6; //当前页结果列表
}

message GetClassStudentsRequest{
    fixed64 schoolid = 3;      //学校id，必填
    repeated fixed64 classids = 2;     //学生id，必填
}

message GetClassStudentsResponse{
    RPC_CALL_RESULT result = 1;
    repeated StudentInfo list = 2; //
}

//获取学生信息
message GetStudentInfoRequest{    
    repeated fixed64 studentid = 1;     //学生id，必填
}

message GetStudentInfoResponse{
    RPC_CALL_RESULT result = 1;
    
    repeated StudentInfo list = 2; //
}

message GetStudentStatusInfoRequest{    
    int64 studentid = 1;     //学生id，必填
}

message GetStudentStatusInfoResponse{   
    RPC_CALL_RESULT result = 1;
    int64 studentid = 2;
    bool exist_student_info = 3;
    bool exist_apply_info = 4;
    StudentApplyInfo apply_info = 5;
    StudentInfo student_info = 6;
}

//设置学生信息。不通过审批，直接设置学生所属班级，用户批量注册
message SetStudentInfoRequest{    
    fixed64 operatorid = 1;
    repeated StudentInfo list = 2;  
}

//从学校内移除学生。
message RemoveStudentRequest{  
    fixed64 operatorid = 1;
    fixed64 schoolid = 2;    
    repeated fixed64 students = 3;  
    bool only_leave_class = 4; //true=只离开班级，不离开学校
    fixed64 classid = 5;
}

//获取班级内学生人数
message GetStudentCountRequest{  
    fixed64 schoolid = 1;    
    repeated fixed64 classids = 2;  
}

message ClassStudentCount{
    fixed64 classid = 1;
    int32 student_count=2;
}

message GetStudentCountResponse{  
    RPC_CALL_RESULT result = 1;
    fixed64 schoolid = 2;    
    repeated ClassStudentCount list = 3;  
}
  
  